# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# Copyright (c) 2020 Red Hat, Inc.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "search.fullname" . }}-redisgraph
  labels:
    app: {{ template "search.name" . }}
    chart: {{ template "search.chart" . }}
    component: "redisgraph"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "search.name" . }}
      component: "redisgraph"
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ template "search.name" . }}
        component: "redisgraph"
        release: {{ .Release.Name }}
        chart: {{ template "search.chart" . }}
        heritage: {{ .Release.Service }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.global.arch }}
                - {{ . }}
                {{- end }}
      tolerations:
        - key: dedicated
          operator: Exists
          effect: NoSchedule
      containers:
      - name: redisgraph
        image: {{ .Values.global.imageOverrides.redisgraph_tls }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redisgraph-user-secret
              key: redispwd
        - name: REDIS_GRAPH_SSL
          value: "true"
        ports:
        - name: redisgraph
          containerPort: 6380
        resources:
{{ toYaml .Values.search.redisgraph.resources | indent 10 }}
        livenessProbe:
          tcpSocket:
            port: 6380
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          tcpSocket:
            port: 6380
          initialDelaySeconds: 5
          periodSeconds: 15
        volumeMounts:
        - name: "redis-graph-certs"
          readOnly: true
          mountPath: "/certs"
      hostIPC: false
      hostNetwork: false
      hostPID: false
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
      {{- end }}
      volumes:
      - name: icp-search-certs
        secret:
          secretName: {{ .Release.Name }}-search-secrets
      - name: redis-graph-certs
        secret:
          secretName: {{ .Release.Name }}-redisgraph-secrets
          items:
          - key: ca.crt
            path: redis.crt
          - key: tls.crt
            path: server.crt
          - key: tls.key
            path: server.key
      {{- if .Values.global.nodeSelector.enabled }}
      nodeSelector:
      {{- if .Values.global.nodeSelector.os }}
        "beta.kubernetes.io/os" : {{ .Values.global.nodeSelector.os }}
      {{- end }}
      {{- if .Values.global.nodeSelector.customLabelSelector }}
        {{ .Values.global.nodeSelector.customLabelSelector }} : {{ .Values.global.nodeSelector.customLabelValue}}
      {{- end }}
      {{- end }}
