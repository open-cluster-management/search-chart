# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# Copyright (c) 2020 Red Hat, Inc.
# Copyright Contributors to the Open Cluster Management project

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "search.fullname" . }}-search-aggregator
  labels:
    app: {{ template "search.name" . }}
    chart: {{ template "search.chart" . }}
    component: "search-aggregator"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "search.name" . }}
      component: "search-aggregator"
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ template "search.name" . }}
        ocm-antiaffinity-selector: "searchaggregator"
        component: "search-aggregator"
        release: {{ .Release.Name }}
        chart: {{ template "search.chart" . }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: search-aggregator
      securityContext:
          runAsNonRoot: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.global.arch }}
                - {{ . }}
                {{- end }}
        {{- with .Values.aggregator.affinity.podAntiAffinity }}
        podAntiAffinity: 
{{ toYaml . | indent 10 }}
        {{- end }}
      tolerations:
        - key: dedicated
          operator: Exists
          effect: NoSchedule
        - effect: NoSchedule 
          key: node-role.kubernetes.io/infra 
          operator: Exists
      containers:
      - name: aggregator
        image: {{ .Values.global.imageOverrides.search_aggregator }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        env:
        - name: REDIS_HOST
          value: '{{ template "search.fullname" . }}-search-redisgraph.{{ .Values.org }}.svc'
        - name: REDIS_SSH_PORT
          value: "6380"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redisgraph-user-secret
              key: redispwd
        resources:
{{ toYaml .Values.search.aggregator.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: 3010
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /readiness
            port: 3010
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - name: search-certs
          mountPath: /sslcert
        - name: redis-graph-certs
          mountPath: /rediscert/redis.crt
          subPath: redis.crt
      hostIPC: false
      hostNetwork: false
      hostPID: false
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
      {{- end }}
      volumes:
      - name: search-certs
        secret:
          secretName: search-aggregator-secrets
      - name: redis-graph-certs
        configMap:
          name: search-redis-ca-crt
          items:
          - key: service-ca.crt
            path: redis.crt
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
      {{- end }}
