# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# Copyright (c) 2020 Red Hat, Inc.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "search.fullname" . }}-search-api
  labels:
    app: {{ .Values.search.name }}
    chart: {{.Chart.Name}}-{{.Chart.Version}}
    component: "search-api"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.search.name }}
      component: "search-api"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.search.name }}
        component: "search-api"
        release: {{ .Release.Name }}
        chart: {{.Chart.Name}}-{{.Chart.Version}}
        heritage: {{ .Release.Service }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      securityContext:
          runAsNonRoot: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.global.arch }}
                - {{ . }}
                {{- end }}
      tolerations:
        - key: dedicated
          operator: Exists
          effect: NoSchedule
      containers:
      - name: search-api
        image: "{{ .Values.search.searchapi.image.repository}}/{{.Values.search.searchapi.image.name}}:{{ .Values.search.searchapi.image.tag }}{{ .Values.imageTagPostfix }}"
        imagePullPolicy: {{ .Values.search.searchapi.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        env:
        - name: cfcRouterUrl
          value: {{ .Values.global.cfcRouterUrl }}
        - name: PLATFORM_IDENTITY_PROVIDER_URL
          value: {{ .Values.global.cfcRouterUrl }}/idprovider
        - name: redisSSLEndpoint
          value: '{{ template "search.fullname" . }}-search-redisgraph:6380'
        - name: redisPassword
          valueFrom:
            secretKeyRef:
              name: redisgraph-user-secret
              key: redispwd
        ports:
        - containerPort: 4010
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livenessProbe
            port: 4010
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readinessProbe
            port: 4010
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
        {{- toYaml .Values.search.searchapi.resources | nindent 10 }}
        volumeMounts:
        - name: search-api-certs
          mountPath: /opt/app-root/search-api/sslcert
        - name: redis-certs
          mountPath: /opt/app-root/search-api/rediscert/redis.crt
          subPath: redis.crt
      hostIPC: false
      hostNetwork: false
      hostPID: false
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
      {{- end }}
      volumes:
      - name: search-api-certs
        secret:
          secretName: {{ .Release.Name }}-search-api-secrets
          items:
          - key: ca.crt
            path: searchapica.crt
          - key: tls.crt
            path: searchapi.crt
          - key: tls.key
            path: searchapi.key
      - name: redis-certs
        secret:
          secretName: {{ .Release.Name }}-redisgraph-secrets
          items:
          - key: ca.crt
            path: redis.crt
          - key: tls.crt
            path: server.crt
          - key: tls.key
            path: server.key
      {{- if .Values.global.nodeSelector.enabled }}
      nodeSelector:
      {{- if .Values.global.nodeSelector.os }}
        "beta.kubernetes.io/os" : {{ .Values.global.nodeSelector.os }}
      {{- end }}
      {{- if .Values.global.nodeSelector.customLabelSelector }}
        {{ .Values.global.nodeSelector.customLabelSelector }} : {{ .Values.global.nodeSelector.customLabelValue}}
      {{- end }}
      {{- end }}
